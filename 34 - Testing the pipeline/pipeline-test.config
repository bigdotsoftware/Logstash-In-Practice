input {
     generator {
       lines => [
         '157.110.102.44 - - [19/Aug/2022:06:09:13 +0200] "GET /app/main/posts HTTP/1.0" 200 4941 "http://www.chase.com/main.php" "Mozilla/5.0 (Macintosh; PPC Mac OS X 10_6_4 rv:2.0; sk-SK) AppleWebKit/534.36.6 (KHTML, like Gecko) Version/4.1 Safari/534.36.6"',
         '50.6.68.159 - - [19/Aug/2022:06:09:15 +0200] "PUT /apps/cart.jsp?appID=2578 HTTP/1.0" 200 4978 "http://walker.biz/home.php" "Mozilla/5.0 (iPod; U; CPU iPhone OS 3_2 like Mac OS X; he-IL) AppleWebKit/533.38.6 (KHTML, like Gecko) Version/4.0.5 Mobile/8B112 Safari/6533.38.6"',
         '216.191.16.203 - - [19/Aug/2022:06:09:17 +0200] "DELETE find.php?phrase=ElasticSearch HTTP/1.0" 200 4989 "http://morgan-ward.com/register.php" "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 5.0; Trident/4.0)"',
         "line 3"
       ]
       # How many times emit all the lines (0 -infinite)
       count => 0
       type => "my-test-input-lines"
     }
     
     #http {
     #   port => 5555
     #}
     
}

#base filter is included from the separate file: core-pipeline-prod-test.config

filter {
    if [tags] {
       ruby {
         code => "
            event.get('[tags]').each do |item|
               if item =~ /\A_/ 
                  event.set('hasError', 'true')
               end
            end
         "
       }
    }
    #each event must contain the source.address field, otherwise mark it as an error
    if ! [source][address] and ! [hasError] {
      mutate {
        add_field => { "hasError" => "true" }
      }
    }
}
output {    
    # Print failed events, but only when they are coming from the test input
    if [type] == "my-test-input-lines" and [hasError] == "true" {
        stdout {
        }
    }
}
